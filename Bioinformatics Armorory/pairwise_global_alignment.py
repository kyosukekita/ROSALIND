s="""
t="""

def global_align_with_affine(s,t):
    s=s.replace('\n','')
    t=t.replace('\n','')
   
    import pandas as pd
    DNAfull=pd.DataFrame([
    [5, -4, -4, -4, -4, 1, 1, -4, -4, 1, -4, -1, -1, -1, -2],
[-4, 5, -4, -4, -4, 1, -4, 1, 1, -4, -1, -4, -1, -1, -2],
[-4, -4, 5, -4, 1, -4, 1, -4, 1, -4, -1, -1, -4, -1, -2],
[-4, -4, -4, 5, 1, -4, -4, 1, -4, 1, -1, -1, -1, -4, -2],
[-4, -4, 1, 1, -1, -4, -2, -2, -2, -2, -1, -1, -3, -3, -1],
[1, 1, -4, -4, -4, -1, -2, -2, -2, -2, -3, -3, -1, -1, -1],
[1, -4, 1, -4, -2, -2, -1, -4, -2, -2, -3, -1, -3, -1, -1],
[-4, 1, -4, 1, -2, -2, -4, -1, -2, -2, -1, -3, -1, -3, -1],
[-4, 1, 1, -4, -2, -2, -2, -2, -1, -4, -1, -3, -3, -1, -1],
[1, -4, -4, 1, -2, -2, -2, -2, -4, -1, -3, -1, -1, -3, -1],
[-4, -1, -1, -1, -1, -3, -3, -1, -1, -3, -1, -2, -2, -2, -1],
[-1, -4, -1, -1, -1, -3, -1, -3, -3, -1, -2, -1, -2, -2, -1],
[-1, -1, -4, -1, -3, -1, -3, -1, -3, -1, -2, -2, -1, -2, -1],
[-1, -1, -1, -4, -3, -1, -1, -3, -1, -3, -2, -2, -2, -1, -1],
[-2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]],
    index=['A', 'T', 'G', 'C', 'S', 'W', 'R', 'Y', 'K', 'M', 'B', 'V', 'H', 'D', 'N'],
    columns=['A', 'T', 'G', 'C', 'S', 'W', 'R', 'Y', 'K', 'M', 'B', 'V', 'H', 'D', 'N'])
 
    dp=[[0 for j in range(len(t) + 1)] for i in range(len(s) + 1)]
    x=[[0 for j in range(len(t)+1)] for i in range(len(s)+1)] #s aligned to a gap
    y=[[0 for j in range(len(t)+1)] for i in range(len(s)+1)] #t aligned to a gap
    
    for i in range(1,len(s) + 1):
        dp[i][0] = -float('inf')
        y[i][0]=(-1)*(i-1)-10
    for i in range(1, len(t) + 1):
        dp[0][i] = -float('inf')
        x[0][i]= (-1)*(i-1)-10

        
    for i in range(1, len(s)+1):
        for j in range(1,len(t)+1):
            cost=DNAfull[s[i-1]][t[j-1]]            
            x[i][j]=max(dp[i-1][j]-10, x[i-1][j]-1)
            y[i][j]=max(dp[i][j-1]-10, y[i][j-1]-1)
            
            dp[i][j] = max(dp[i-1][j-1]+cost, x[i][j],y[i][j])
                     
    print(dp[len(s)][len(t)])
    

    
global_align_with_affine(s,t)  
    
